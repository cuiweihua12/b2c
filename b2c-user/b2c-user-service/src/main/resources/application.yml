server:
  port: 8085
spring:
  application:
    name: user-service
  datasource:
    password: root
    username: root
    url:  jdbc:mysql://localhost:3306/b2c?serverTimezone=GMT%2B8&useUnicode=true&characterEncoding=utf8
    driver-class-name: com.mysql.cj.jdbc.Driver
    type: com.alibaba.druid.pool.DruidDataSource
    druid:
      #最大活跃数量
      max-active: 20
      #最小活动数量
      min-idle: 1
      #初始化数量
      initial-size: 5
      #数据库链接超时最大等待时间
      max-wait: 60000
      #配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
      time-between-eviction-runs-millis: 60000
      #配置一个链接在连接池中最小存活时间
      min-evictable-idle-time-millis: 30000
      #验证发送sql
      validation-query: SELECT 1 FROM DUAL
      #测试闲置连接
      test-while-idle: true
      #测试已经回收的链接
      test-on-return: true
      # 打开PSCache
      poolPreparedStatements: true
      # 指定每个连接上PSCache的大小
      maxOpenPreparedStatements: 20
      # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
      connectionProperties: druid.stat.mergeSql=false;druid.stat.slowSqlMillis=5000
      # 使用全局的数据源监控 合并多个DruidDataSource的监控数据
      useGlobalDataSourceStat: true
      #1.1.18版本后需手动开启druid监控
      stat-view-servlet:
        enabled: true
      #druid监控不到sql时需加
      filters: stat
  redis:
    password: 123456
    host: 192.168.138.128
    port: 6379
eureka:
  client:
    service-url:
      defaultZone:  http://localhost:8888/eureka
  instance:
    #十分内没收到心跳则过期
    lease-expiration-duration-in-seconds: 10
    #每间隔五分发送一次心跳
    lease-renewal-interval-in-seconds: 5
    prefer-ip-address: true
    ip-address: 127.0.0.1
    instance-id: ${spring.application.name}:${server.port}
logging:
  level:
    com.cwh:  debug
  file:
    name: b2c-user-service.log
